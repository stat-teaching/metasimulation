{
  "hash": "1925a01eea8fbdb1fa7b9ddd3fc7fb08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Power analysis\"\n---\n\n\n\n\n\n\n# Statistical Power {.section}\n\n## Power in a nutshell^[Thanks to https://rpsychologist.com/creating-a-typical-textbook-illustration-of-statistical-power-using-either-ggplot-or-base-graphics]\n\nThe stastistical power is defined as the probability of correctly rejecting the null hypothesis $H_0$.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-3-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n## Power in a nutshell\n\nFor simple designs such as t-test, ANOVA, etc. the power can be computed analytically. For example, let's find the power of detecting an effect size of $d = 0.5$ with $n1 = n2 = 30$.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd <- 0.5\nalpha <- 0.05\nn1 <- n2 <- 30\nsp <- 1\n\n# Calculate non-centrality parameter (delta)\ndelta <- d * sqrt(n1 * n2 / (n1 + n2))\n\n# Calculate degrees of freedom\ndf <- n1 + n2 - 2\n\n# Calculate critical t-value\ncritical_t <- qt(1 - alpha / 2, df)\n\n# Calculate non-central t-distribution value\nnon_central_t <- delta / sp\n\n# Calculate power\n1 - pt(critical_t - non_central_t, df)\n#> [1] 0.4741093\n```\n:::\n\n\n## Power in a nutshell\n\nThe same can be done using the `pwr` package:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npower <- pwr::pwr.t.test(n = n1, d = 0.5)\npower\n#> \n#>      Two-sample t test power calculation \n#> \n#>               n = 30\n#>               d = 0.5\n#>       sig.level = 0.05\n#>           power = 0.4778965\n#>     alternative = two.sided\n#> \n#> NOTE: n is number in *each* group\n```\n:::\n\n\n## Power in a nutshell\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-6-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n## Power by simulations\n\nSometimes the analytical solution is not available or we can estimate the power for complex scenarios (missing data, unequal variances, etc.). The general workflow is:\n\n1. Generate data under the parametric assumptions\n2. Fit the appropriate model\n3. Extract the relevant metric (e.g., p-value)\n4. Repeat 1-3 several times (1000, 10000 or more)\n5. Summarise the results\n\nFor example, the power is the number of p-values lower than $\\alpha$ over the total number of simulations.\n\n## Power by simulations\n\nLet's see the previous example using simulations:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnsim <- 5000\np <- rep(NA, nsim)\nfor(i in 1:nsim){\n    g1 <- rnorm(n1, 0, 1)\n    g2 <- rnorm(n2, d, 1)\n    p[i] <- t.test(g1, g2)$p.value\n}\nmean(p <= alpha)\n#> [1] 0.4828\n```\n:::\n\n\nThe estimated value is pretty close to the analytical value.\n\n## What about meta-analysis\n\nAlso for meta-analysis we have the two approaches analytical and simulation-based.\n\n- The analytical approach for (intercept-only) random-effects and equal-effects model can be found on @Borenstein2009-mo (Chapter 29). See also @Valentine2010-aj and @Hedges2001-ra\n- @Jackson2017-dv proposed a similar but improved approach\n\n## Analytical approach\n\nFor the analytical approach we need to make some assumptions:\n\n- $\\tau^2$ and $\\mu_{\\theta}$ (or $\\theta$) are estimated without errors\n- The $\\sigma^2_i$ (thus the sample size) of each $k$ study is the same\n\nUnder these assumptions the power is:\n\n$$\n(1 - \\Phi(c_{\\alpha} - \\lambda)) + \\Phi(-c_{\\alpha} - \\lambda)\n$$\n\nWhere $c_{\\alpha}$ is the critical $z$ value and $\\lambda$ is the observed statistics.\n\n## Analytical approach - EE model\n\nFor an EE model the only source of variability is the sampling variability, thus $\\lambda$:\n\n$$\n\\lambda_{EE} = \\frac{\\theta}{\\sqrt{\\sigma^2_{\\theta}}}\n$$\n\nAnd recalling previous assuptions where $\\sigma^2_1 = \\dots = \\sigma^2_k$:\n\n$$\n\\sigma^2_{\\theta} = \\frac{\\sigma^2}{k}\n$$\n\n## Analytical approach - EE model\n\nFor example, a meta-analysis of $k = 15$ studies where each study have a sample size of $n1 = n2 = 20$ (assuming again unstandardized mean difference as effect size):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nk <- 10\ntheta <- 0.3\nn1 <- n2 <- 25\nvt <- 1/n1 + 1/n2\nvtheta <- vt/k\nlambda <- theta/sqrt(vtheta)\nzcrit <- abs(qnorm(0.05/2))\n(1 - pnorm(zcrit - lambda)) + pnorm(-zcrit - lambda)\n#> [1] 0.9183621\n```\n:::\n\n\nBe careful that the EE model is assuming $\\tau^2 = 0$ thus is like having a huge study with $k \\times n_1$ participants per group.\n\n## Analytical approach - RE model\n\nFor the RE model we just need to include $\\tau^2$ in the $\\lambda$ calculation, thus:\n\n$$\n\\sigma^{2\\star}_{\\theta} = \\frac{\\sigma^2 + \\tau^2}{k}\n$$\n\nThe other calculations are the same as the EE model.\n\n## Analytical approach - RE model\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nk <- 10\nmu <- 0.3\ntau2 <- 0.1\nn1 <- n2 <- 25\nvt <- 1/n1 + 1/n2\nvtheta <- (vt + tau2)/k\nlambda <- mu/sqrt(vtheta)\nzcrit <- abs(qnorm(0.05/2))\n(1 - pnorm(zcrit - lambda)) + pnorm(-zcrit - lambda)\n#> [1] 0.6087795\n```\n:::\n\n\nThe power is reduced because we are considering another source of heterogeneity. Clearly the maximal power of $k$ studies is achieved when $\\tau^2 = 0$. Hypothetically we can increase the power either increasing $k$ (the number of studies) or reducing $\\sigma^2_k$ (increasing the number of participants in each study).\n\n## Analytical approach - Power curves\n\nThe most informative approach is plotting the power curves for different values of $\\tau^2$, $\\sigma^2_k$ and $\\theta$ (or $\\mu_{\\theta}$).\n\nYou can use the `power_meta()` function:\n\n\n::: {.cell layout-align=\"center\"}\n```r\n```\n:::\n\n\n## Analytical approach - Power curves\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-11-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n## Analytical approach - Power curves\n\nWith the analytical approach we can (quickly) do interesting stuff. For example, we fix the total $N = n_1 + n_2$ for a series of $k$ and check the power.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-12-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\nAs long as $\\tau^2 \\neq 0$ we need more studies (even if the total sample size is the same).\n\n## Simulation-based power\n\nWith simulations we can fix or relax the previous assumptions. For example, let's compute the power for an EE model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#> [1] 0.932\n```\n:::\n\n\nThe value is similar to the analytical simulation. But we can improve it e.g. generating heterogeneous sample sizes.\n\n## Simulation-based power curve\n\nBy repeating the previous approach for a series of parameters we can easily draw a power curve:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nk <- c(5, 10, 50, 100)\nes <- 0.1\ntau2 <- c(0, 0.05, 0.1, 0.2)\nnsim <- 1000\n\ngrid <- expand_grid(k, es, tau2)\npower <- rep(NA, nrow(grid))\n\nfor(i in 1:nrow(grid)){\n  pval <- rep(NA, nsim)\n  for(j in 1:nsim){\n    n <- rpois(grid$k[i], 40)\n    dat <- sim_studies(grid$k[i], grid$es[i], grid$tau2[i], n)\n    fit <- rma(yi, vi, data = dat)\n    pval[j] <- fit$pval\n  }\n  power[i] <- mean(pval <= 0.05)\n}\ngrid$power <- power\n```\n:::\n\n\n## Simulation-based power curve\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-15-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n## Power analysis for meta-regression\n\nThe power for a meta-regression can be easily computed by simulating the moderator effect. For example, let's simulate the effect of a binary predictor $x$.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Power analysis for meta-regression\n\nThen we can plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-17-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n# Multilab Studies {.section}\n\n## Multilab studies\n\nMultilab studies can be seen as a meta-analysis that is planned (a *prospective* meta-analysis) compared to standard *retrospective* meta-analysis.\n\nThe statistical approach is (roughly) the same with the difference that we have control both on $k$ (the number of experimental units) and $n$ the sample size within each unit.\n\nIn multilab studies we have also the raw data (i.e., participant-level data) thus we can do more complex multilevel modeling.\n\n## Meta-analysis as multilevel model\n\nAssuming that we have $k$ studies with raw data available there is no need to aggregate, calculate the effect size and variances and then use an EE or RE model.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nk <- 50\nes <- 0.4\ntau2 <- 0.1\nn <- round(runif(k, 10, 100))\ndat <- vector(mode = \"list\", k)\nthetai <- rnorm(k, 0, sqrt(tau2))\n\nfor(i in 1:k){\n  g1 <- rnorm(n[i], 0, 1)\n  g2 <- rnorm(n[i], es + thetai[i], 1)\n  d <- data.frame(id = 1:(n[i]*2), unit = i, y = c(g1, g2), group = rep(c(0, 1), each = n[i]))\n  dat[[i]] <- d\n}\n\ndat <- do.call(rbind, dat)\nht(dat)\n#>      id unit           y group\n#> 1     1    1  0.25351317     0\n#> 2     2    1  2.21833569     0\n#> 3     3    1 -1.59512076     0\n#> 4     4    1 -0.57003152     0\n#> 5     5    1  0.35994291     0\n#> 5471 33   50  0.99274994     1\n#> 5472 34   50  2.81048166     1\n#> 5473 35   50  2.46494714     1\n#> 5474 36   50  1.52578306     1\n#> 5475 37   50  0.70916460     1\n#> 5476 38   50 -0.07521999     1\n```\n:::\n\n\n## Meta-analysis as multilevel model\n\nThis is a simple **multilevel model** (pupils within classrooms or trials within participants). We can fit the model using `lme4::lmer()`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#> Linear mixed model fit by REML ['lmerMod']\n#> Formula: y ~ group + (1 | unit)\n#>    Data: dat\n#> \n#> REML criterion at convergence: 15851.7\n#> \n#> Scaled residuals: \n#>     Min      1Q  Median      3Q     Max \n#> -3.8783 -0.6644 -0.0152  0.6603  3.9740 \n#> \n#> Random effects:\n#>  Groups   Name        Variance Std.Dev.\n#>  unit     (Intercept) 0.01536  0.1239  \n#>  Residual             1.04809  1.0238  \n#> Number of obs: 5476, groups:  unit, 50\n#> \n#> Fixed effects:\n#>             Estimate Std. Error t value\n#> (Intercept) -0.01519    0.02698  -0.563\n#> group        0.47306    0.02767  17.097\n#> \n#> Correlation of Fixed Effects:\n#>       (Intr)\n#> group -0.513\n```\n:::\n\n\n## Meta-analysis as multilevel model\n\nLet's do the same as a meta-analysis. Firstly we compute the effect sizes for each unit:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndatagg <- dat |> \n  group_by(unit, group) |> \n  summarise(m = mean(y),\n            sd = sd(y),\n            n = n()) |> \n  pivot_wider(names_from = group, values_from = c(m, sd, n), names_sep = \"\")\n\ndatagg <- escalc(\"MD\", m1i = m1, m2i = m0, sd1i = sd1, sd2i = sd0, n1i = n1, n2i = n0, data = datagg)\n```\n:::\n\n\n## Meta-analysis as multilevel model\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#> \n#>    unit          m0        m1       sd0       sd1 n0 n1     yi     vi \n#> 1     1  0.04832768 0.8352791 1.0415511 1.0081381 51 51 0.7870 0.0412 \n#> 2     2  0.17514842 0.7970731 1.0065334 0.8038306 49 49 0.6219 0.0339 \n#> 3     3 -0.26231701 0.2935666 1.0407124 1.1675311 23 23 0.5559 0.1064 \n#> 4     4 -0.02154628 0.4011219 0.9582875 0.7732307 78 78 0.4227 0.0194 \n#> 5     5 -0.00968915 0.1157841 1.1914665 0.7034426 33 33 0.1255 0.0580 \n#> 45   45 -0.09326319 0.5462242 1.0407688 1.0040196 94 94 0.6395 0.0222 \n#> 46   46 -0.16313667 0.8368845 1.0914930 1.0872035 95 95 1.0000 0.0250 \n#> 47   47  0.01306647 0.1629511 1.1504861 1.1392431 49 49 0.1499 0.0535 \n#> 48   48  0.05309306 0.7589418 1.1088198 1.0849408 97 97 0.7058 0.0248 \n#> 49   49  0.03729666 0.4541249 1.0761246 0.5711910 23 23 0.4168 0.0645 \n#> 50   50  0.13340769 0.9028684 0.9206645 0.8649275 19 19 0.7695 0.0840\n```\n:::\n\n\n## Meta-analysis as multilevel model\n\nThen we can fit the model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#> \n#> Random-Effects Model (k = 50; tau^2 estimator: REML)\n#> \n#> tau^2 (estimated amount of total heterogeneity): 0.0266 (SE = 0.0131)\n#> tau (square root of estimated tau^2 value):      0.1631\n#> I^2 (total heterogeneity / total variability):   41.61%\n#> H^2 (total variability / sampling variability):  1.71\n#> \n#> Test for Heterogeneity:\n#> Q(df = 49) = 84.5366, p-val = 0.0012\n#> \n#> Model Results:\n#> \n#> estimate      se     zval    pval   ci.lb   ci.ub      \n#>   0.4711  0.0370  12.7309  <.0001  0.3986  0.5436  *** \n#> \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n\n## Meta-analysis as multilevel modeling\n\nActually the results are very similar where the standard deviation of the intercepts of the `lme4` model is $\\approx \\tau$ and the `group` effect is the intercept of the `rma` model.\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#>               b        se       tau2   model\n#> group 0.4730643 0.0276693 0.01536141    lme4\n#>       0.4710951 0.0370040 0.02660848 metafor\n```\n:::\n\n\nActually the two model are not exactly the same, especially when using only the aggregated data. See https://www.metafor-project.org/doku.php/tips:rma_vs_lm_lme_lmer.\n\n## Meta-analysis as multilevel modeling\n\nTo note, aggregating data and then computing a standard (non-weighted) model (sometimes this is done with trial-level data) is wrong and should be avoided. Using meta-analysis is clear that aggregating without taking into account the cluster (e.g., study or subject) precision is misleading.\n\n\n::: {.cell layout-align=\"center\"}\n\n```\n#> Linear mixed model fit by REML ['lmerMod']\n#> Formula: y ~ group + (1 | unit)\n#>    Data: dataggl\n#> \n#> REML criterion at convergence: -6.2\n#> \n#> Scaled residuals: \n#>     Min      1Q  Median      3Q     Max \n#> -2.5291 -0.4831  0.0060  0.4325  3.7067 \n#> \n#> Random effects:\n#>  Groups   Name        Variance Std.Dev.\n#>  unit     (Intercept) 0.009927 0.09963 \n#>  Residual             0.041790 0.20443 \n#> Number of obs: 100, groups:  unit, 50\n#> \n#> Fixed effects:\n#>             Estimate Std. Error t value\n#> (Intercept) -0.02031    0.03216  -0.632\n#> groupm1      0.47465    0.04089  11.609\n#> \n#> Correlation of Fixed Effects:\n#>         (Intr)\n#> groupm1 -0.636\n```\n:::\n\n\n## Mulitlab sample size vs unit\n\nWhen planning a multilab study there is an important decision between **increasing the sample size within each unit** (more effort for each lab) or **recruiting more units** with less participants per unit (more effort for the organization).\n\nWe could have the situation where the number of units $k$ is fixed and we can only increase the sample size.\n\nWe can also simulate scenarios where some units collect all data while others did not complete the data collection.\n\n## Fixed $k$, increasing $n$\n\nLet's assume that the maximum number of labs is $10$. How many participants are required assuming a certain amount of heterogeneity?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nes <- 0.2\nk <- 10\nn1 <- n2 <- seq(10, 500, 10)\ntau2 <- c(0.01, 0.05, 0.1, 0.2)\nsim <- expand_grid(k, es, tau2, n1)\nsim$n2 <- sim$n1\nsim$vt <- with(sim, 1/n1 + 1/n2)\nsim$I2 <- round(with(sim, tau2 / (tau2 + vt)) * 100, 3)\nsim$power <- power_meta(sim$es, sim$k, sim$tau2, sim$n1, sim$n2)\n\nht(sim)\n#> # A tibble: 11 × 8\n#>        k    es  tau2    n1    n2      vt    I2 power\n#>    <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl> <dbl> <dbl>\n#>  1    10   0.2  0.01    10    10 0.2      4.76 0.281\n#>  2    10   0.2  0.01    20    20 0.1      9.09 0.479\n#>  3    10   0.2  0.01    30    30 0.0667  13.0  0.627\n#>  4    10   0.2  0.01    40    40 0.05    16.7  0.733\n#>  5    10   0.2  0.01    50    50 0.04    20    0.807\n#>  6    10   0.2  0.2    450   450 0.00444 97.8  0.288\n#>  7    10   0.2  0.2    460   460 0.00435 97.9  0.288\n#>  8    10   0.2  0.2    470   470 0.00426 97.9  0.288\n#>  9    10   0.2  0.2    480   480 0.00417 98.0  0.288\n#> 10    10   0.2  0.2    490   490 0.00408 98    0.288\n#> 11    10   0.2  0.2    500   500 0.004   98.0  0.288\n```\n:::\n\n\n## Fixed $k$, increasing $n$\n\nWith a fixed $k$, we could reach a plateau even increasing $n$. This depends also on $\\mu_{\\theta}$ and $\\tau^2$.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](power-analysis_files/figure-revealjs/unnamed-chunk-26-1.svg){fig-align='center' width=960}\n:::\n:::\n\n\n## Multilab replication studies\n\nA special type of multilab studies are the replication projects. There are some paper discussing how to view replication studies as meta-analyses and how to plan them.\n\n- @Hedges2021-of\n- @Schauer2022-mj\n- @Schauer2020-tw\n- @Schauer2021-ja\n- @Schauer2023-yn\n- @Hedges2019-ry\n\n## References <button class=\"btn\"><i class=\"fa fa-download\"></i><a href=\"data:text/x-bibtex;base64,\" download=\"refs_to_download.bib\"> Download .bib file</a></button> {.refs}\n\n::: {#refs}\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}